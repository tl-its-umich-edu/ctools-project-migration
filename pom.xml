<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<groupId>edu.umich.its</groupId>
	<artifactId>ctools-project-migration</artifactId>
	<version>0.1.0</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.0.RELEASE</version>
	</parent>

	<packaging>war</packaging>

	<profiles>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<maven.httpRequest.serverName>localhost</maven.httpRequest.serverName>
				<maven.httpRequest.serverPort>8080</maven.httpRequest.serverPort>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<maven.httpRequest.serverName>cpmdev.miserver.it.umich.edu</maven.httpRequest.serverName>
				<maven.httpRequest.serverPort>80</maven.httpRequest.serverPort>
			</properties>
		</profile>
		<profile>
			<id>qa</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<maven.httpRequest.serverName>cpmqa.miserver.it.umich.edu</maven.httpRequest.serverName>
				<maven.httpRequest.serverPort>80</maven.httpRequest.serverPort>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<maven.httpRequest.serverName>cpm.it.umich.edu</maven.httpRequest.serverName>
				<maven.httpRequest.serverPort>80</maven.httpRequest.serverPort>
			</properties>
		</profile>
		<profile>
			<id>db-driver-oracle</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc7</artifactId>
					<version>12.1.0.2</version>
				</dependency>
			</dependencies>
		</profile>
	</profiles>


	<dependencies>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.9.9</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<!-- Don't go higher than 2.9.x -->
			<version>[2.9.10.3,2.10)</version>
		</dependency>
		<!-- axis
		<dependency>
			<groupId>org.apache.axis</groupId>
			<artifactId>axis</artifactId>
			<version>1.4</version>
		</dependency>-->
		<dependency>
			<groupId>javax.xml</groupId>
			<artifactId>jaxrpc-api</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>commons-discovery</groupId>
			<artifactId>commons-discovery</artifactId>
			<version>0.4</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>wsdl4j</groupId>
			<artifactId>wsdl4j</artifactId>
			<version>1.6.2</version>
		</dependency>
		<!-- end of axis -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.19</version>
		</dependency>
		<!-- Web Service -->
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-core</artifactId>
		</dependency>

		<!-- rest call -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.6</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20140107</version>
			<!--<version>20150729</version>-->
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.4</version>
		</dependency>
		<!-- Box integration -->
		<dependency>
			<groupId>com.box</groupId>
			<artifactId>box-java-sdk</artifactId>
			<version>0.7.0</version>
		</dependency>
		<!-- Apache Commons IO -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.4.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>[1.22,)</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
	</dependencies>

	<properties>
		<skipTests>true</skipTests>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                </configuration>
            </plugin>
            <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<webResources>
						<resource>
							<!-- this is relative to the pom.xml directory -->
							<directory>public</directory>
						</resource>
					</webResources>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<git_url>${git_url}</git_url>
							<git_branch>${git_branch}</git_branch>
							<git_commit>${git_commit}</git_commit>
							<build_id>${build_id}</build_id>
							<build_number>${build_number}</build_number>
							<build_url>${build_url}</build_url>
							<build_tag>${build_tag}</build_tag>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<!-- remote debugging
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<jvmArguments>
						-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005
					</jvmArguments>
				</configuration>
      		</plugin>
      		-->
      		<!-- JMeter -->
			<plugin>
				<groupId>com.lazerycode.jmeter</groupId>
				<artifactId>jmeter-maven-plugin</artifactId>
				<version>1.10.1</version>
				<executions>
					<execution>
						<id>jmeter-tests</id>
						<phase>verify</phase>
						<goals>
							<goal>jmeter</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.lazerycode.jmeter</groupId>
				<artifactId>jmeter-analysis-maven-plugin</artifactId>
				<version>1.0.6</version>
				<executions>
					<execution>
					<phase>verify</phase>
					<goals>
						<goal>analyze</goal>
					</goals>
					<configuration>
						<!--
							An AntPath-Style pattern matching a JMeter XML result file to analyze.
							Must be a fully qualified path.
							File may be GZiped, must end in .gz then.
							Default: not set.
							Required.
						-->
						<source>${project.build.directory}/**/*.jtl</source>
						<!--
							directory where to store analysis result files.
							Default: ${project.build.directory}
							Required.
						-->
						<targetDirectory>${project.build.directory}/results</targetDirectory>
						<!--
							By default, the console output during a jmeter test run is suppressed.
							We want to display the progress using the listener "Generate Summary Results"
							(which periodically prints stats to stdout). Therefore we have to make sure,
							that the jmeter output is not suppressed.
						-->
						<suppressJMeterOutput>false</suppressJMeterOutput>
						<!--
							To simplify debugging, it is advisable to adapt the loglevel.
							The jmeter logs are written to the file jmeter.log.
						-->
						<overrideRootLogLevel>INFO</overrideRootLogLevel>
						<!--
							If tests fail (e.g. a http-request running into a timeout), the corresponding Maven
							goal also fails (and subsequent goals aren't executed anymore). We want to create graphs
							from test-results, no matter if some requests failed or not, so we ignore jmeter failures.
						-->
						<ignoreResultFailures>true</ignoreResultFailures>
					</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>Process test resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
						<configuration>
							<!--
								Now that we are maven filtering the jmx files from src/test/jmeter, we must instrcut
								jmeter maven plugin to execute the filtered files
  							-->
  							<testFilesDirectory>${project.build.directory}/plans</testFilesDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>${basedir}/public</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
			<directory>src/test/jmeter</directory>
			<filtering>true</filtering>
			<targetPath>${project.build.directory}/plans</targetPath>
		</testResource>
   </testResources>
	</build>
</project>
